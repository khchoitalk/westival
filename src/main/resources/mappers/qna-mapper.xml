<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qnaMapper">

	 <resultMap type="Qna" id="resultQna">
		<id property="qna_no" column="qna_no" />
		<result property="user_id" column="user_id" />
		<result property="category" column="category" />
		<result property="state" column="state" />
		<result property="qna_date" column="qna_date" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="read_count" column="read_count" />
		<result property="file_name" column="file_name" />
		<result property="rename_file_name" column="rename_file_name" />
		<result property="active" column="active" />
	</resultMap>
	
	<resultMap type="Qna" id="resultQnaList">
		<id property="qna_no" column="qna_no" />
		<result property="user_id" column="user_id" />
		<result property="category" column="category" />
		<result property="state" column="state" />
		<result property="qna_date" column="qna_date" />
		<result property="subject" column="subject" />
		<result property="content" column="content" />
		<result property="read_count" column="read_count" />
		<result property="file_name" column="file_name" />
		<result property="rename_file_name" column="rename_file_name" />
		<result property="active" column="active" />
	</resultMap>
	
	<resultMap type="QnaReply" id="resultQnaReplyList">
		<id property="reply_no" column="reply_no" />
		<result property="reply_user_id" column="reply_user_id" />
		<result property="qna_no" column="qna_no" />
		<result property="reply_content" column="reply_content" />
		<result property="reply_level" column="reply_level" />
		<result property="reply_seq" column="reply_seq" />
		<result property="reply_date" column="reply_date" />
		<result property="reply_ref" column="reply_ref" />
	</resultMap>
	
	<!-- qna 게시글 목록 -->
	<select id="selectListQna" resultMap="resultQnaList">
		<![CDATA[select * from (select ROWNUM RNUM, qna_no, user_id, category, state,
		qna_date, subject, content, read_count, file_name, rename_file_name, active from (select * from tb_qna order by qna_no desc))
		where RNUM >= #{startRow} and RNUM <= #{endRow}
		]]>
	</select>
	
	<!-- qna 게시글 수 -->
	<select id="listCountQna" resultType="_int">
		<![CDATA[select count(*) from tb_qna]]>
	</select>
	
	<!-- qna 글등록 -->
	<insert id="insertQna" parameterType="Qna" flushCache="true"
		statementType="PREPARED" useGeneratedKeys="true">
		<![CDATA[
		insert into tb_qna values ((select NVL(max(qna_no) + 1, 1) from tb_qna),
		#{user_id}, #{category}, default, sysdate, #{subject},
		#{content}, default, #{file_name, jdbcType=INTEGER}, #{rename_file_name, jdbcType=INTEGER}, #{active})
		]]>
	</insert>
	
	<!-- qna게시글 상세보기 -->
	<select id="selectQna" parameterType="_int" resultMap="resultQna">
		<![CDATA[select * from tb_qna where qna_no = #{qna_no}]]>
	</select>
	
	<!-- 조회수 증가 -->
	<update id="updateCountQna" parameterType="_int" flushCache="true"
		statementType="PREPARED">
		<![CDATA[
		update tb_qna set read_count = read_count + 1 where qna_no = #{qna_no}
		]]>
	</update>
	
	<!-- 검색 게시글 목록 -->
	<select id="selectListSearchQna" parameterType="java.util.Map" resultMap="resultQnaList">
		select * from (
		select ROWNUM RNUM, qna_no, user_id, category, state,
		qna_date, subject, content, read_count, file_name, rename_file_name, active
		from (select * from tb_qna
		where qna_no > 0
		<if test="category1 != 'total'">
			and category like #{ category1 }
		</if>
		<choose>
		<when test="category2 == 'subject'">
			and ( subject like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'content'">
			and ( content like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'total'">
			and ( content like '%' || #{ keyword } || '%' or subject like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'user_id'">
			and ( user_id like #{ keyword } )
		</when>
		</choose>
		order by qna_no desc))
		where RNUM between #{startRow} and #{endRow}
	</select>
	
	<!-- 검색 게시글 수 -->
	<select id="searchListCountQna" resultType="_int">
		select count(*) from tb_qna
		where qna_no > 0
		<if test="category1 != 'total'">
			and category like #{ category1 }
		</if>
		<choose>
		<when test="category2 == 'subject'">
			and ( subject like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'content'">
			and ( content like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'total'">
			and ( content like '%' || #{ keyword } || '%' or subject like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'user_id'">
			and ( user_id like #{ keyword } )
		</when>
		</choose>
	</select>
	
	<!-- qna 글 삭제 -->
	<delete id="deleteQna" parameterType="_int" flushCache="true"
		statementType="PREPARED">
		<![CDATA[delete from tb_qna where qna_no = #{qna_no}]]>
	</delete>
	
	<!-- qna 글 수정 -->
	<update id="updateQna" parameterType="Qna"
			flushCache="true" statementType="PREPARED">
		
		update tb_qna set category = #{category}, subject = #{subject}, content = #{content}
		<if test="file_name !='' ">
			,file_name = #{file_name}, rename_file_name = #{rename_file_name}
		</if>
		, active = #{active}
		where qna_no = #{qna_no}
		
	</update>
	
	<!-- 댓글 등록 -->
	<insert id="insertQnaReply" parameterType="QnaReply" flushCache="true"
		statementType="PREPARED" useGeneratedKeys="true">
		<![CDATA[
		insert into tb_qna_reply values 
		((select NVL(max(reply_no)+1,1) from tb_qna_reply), #{reply_user_id}, #{qna_no},
		#{reply_content}, #{reply_level}, (select NVL(max(reply_seq)+1,1) from tb_qna_reply where qna_no = #{qna_no}),
		sysdate, #{reply_ref})
		]]>
	</insert>
	
	<!-- 댓글 목록 -->
	<select id="selectQnaReplyList" parameterType="_int" resultMap="resultQnaReplyList">
		<![CDATA[
		select * from (select ROWNUM RNUM, reply_no, reply_user_id, qna_no, reply_content,
		reply_level, reply_seq, reply_date, reply_ref
		from (select * from tb_qna_reply where qna_no = #{no} order by reply_no asc, reply_seq asc))
		]]>
	</select>
	
	<!-- admin이 댓글 달면 답변완료로 변경 -->
	<update id="updateReplyAdminState" parameterType="java.util.Map" flushCache="true"
		statementType="PREPARED">
		<![CDATA[
		update tb_qna set state = #{state} where qna_no = #{qna_no}
		]]>
	</update>
	
	<!-- qna 댓글 수정 -->
	<update id="updateQnaReply" parameterType="QnaReply"
			flushCache="true" statementType="PREPARED">
		update tb_qna_reply
		set reply_content = #{reply_content}
		where reply_no = #{reply_no}
	</update>
	
	<!-- qna 댓글 삭제 -->
	<delete id="deleteQnaReply" parameterType="_int" flushCache="true"
		statementType="PREPARED">
		<![CDATA[delete from tb_qna_reply where reply_no = #{reply_no}]]>
	</delete>
	
	<!-- 검색 조건문 -->
	<!-- <sql id="search">
		<if test="category1 != null">
			and category like #{ category1 }
		</if>
		<choose>
		<when test="category2 == 'subject'">
			and ( subject like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'content'">
			and ( content like '%' || #{ keyword } || '%' )
		</when>
		<when test="category2 == 'total'">
			and ( content like '%' || #{ keyword } || '%' or subject like '%' || #{ keyword } || '%' )
		</when>
		</choose>
	</sql> -->
	
</mapper>
